---
version: "2"
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - kafka
    volumes:
      - "./app:/app"
    
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.0.0
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: -1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  init-kafka:
    image: confluentinc/cp-kafka:7.0.0
    depends_on:
      - kafka
    entrypoint: ['/bin/sh', '-c']
    command: |
      "
      kafka-topics --delete --if-exists --bootstrap-server kafka:9092 --topic testTopic
      kafka-topics --create --if-not-exists --bootstrap-server kafka:9092 --topic testTopic --partitions 1 --replication-factor 1
      kafka-topics --delete --if-exists --bootstrap-server kafka:9092 --topic testTopic2
      kafka-topics --create --if-not-exists --bootstrap-server kafka:9092 --topic testTopic2 --partitions 1 --replication-factor 1
      kafka-topics --delete --if-exists --bootstrap-server kafka:9092 --topic testTopic3
      kafka-topics --create --if-not-exists --bootstrap-server kafka:9092 --topic testTopic3 --partitions 1 --replication-factor 1
      tail -n10000 /testTopic.txt | kafka-console-producer --bootstrap-server kafka:9092 --topic testTopic
      "
    volumes:
      - "./data_for_local_development/kafka_data/testTopic.txt:/testTopic.txt"

  # broker:
  #   image: apache/kafka:3.9.1
  #   container_name: kafka
  #   hostname: kafka
  #   environment:
  #     KAFKA_NODE_ID: 1
  #     KAFKA_PROCESS_ROLES: broker,controller
  #     KAFKA_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
  #     KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
  #     KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  #     KAFKA_NUM_PARTITIONS: 3
  # init-kafka:
  #   image: apache/kafka:3.9.1
  #   depends_on:
  #     - kafka
  #   entrypoint: ['/bin/sh', '-c']
  #   command: |
  #     "
  #     kafka-topics --delete --if-exists --bootstrap-server kafka:9092 --topic testTopic
  #     kafka-topics --create --if-not-exists --bootstrap-server kafka:9092 --topic testTopic --partitions 1 --replication-factor 1
  #     kafka-topics --delete --if-exists --bootstrap-server kafka:9092 --topic testTopic2
  #     kafka-topics --create --if-not-exists --bootstrap-server kafka:9092 --topic testTopic2 --partitions 1 --replication-factor 1
  #     kafka-topics --delete --if-exists --bootstrap-server kafka:9092 --topic testTopic3
  #     kafka-topics --create --if-not-exists --bootstrap-server kafka:9092 --topic testTopic3 --partitions 1 --replication-factor 1
  #     tail -n10000 /testTopic.txt | kafka-console-producer --bootstrap-server kafka:9092 --topic testTopic
  #     "
  #   volumes:
  #     - "./data_for_local_development/kafka_data/testTopic.txt:/testTopic.txt"